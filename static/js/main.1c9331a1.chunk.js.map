{"version":3,"sources":["redux/dialogsReducer.js","hoc/withAuthRedirect.js","components/Music/Music.module.css","components/News/News.module.css","assets/images/preloader.gif","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/formsControls.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/usersReducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.js","components/Music/Music.jsx","components/News/News.jsx","components/common/Pagination/Pagination.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/PersonalData/StatusWithHooks.js","components/Profile/PersonalData/Status.js","components/Profile/PersonalData/PersonalData.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/NewPost/NewPost.js","components/Profile/Posts/NewPost/NewPostContainer.js","components/Profile/Posts/Posts.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Test.js","components/Login/LoginForm.js","components/Login/Login.js","App.js","hoc/withSuspense.js","index.js","components/Users/users.module.css","components/common/Pagination/Pagination.module.css","components/Profile/PersonalData/PersonalData.module.css","components/Profile/Posts/Post/Post.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Profile/Posts/Posts.module.css","components/Profile/Posts/NewPost/NewPost.module.css","components/Header/Header.module.css"],"names":["initialState","dialogsData","id","name","messageData","message","addMessageActionCreator","newBodyMessage","type","dialogsReducer","state","action","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Boolean","window","location","hostname","match","instance","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","postFollow","userId","post","deleteFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","postsData","newPostText","profile","setUserProfile","setStatus","profileReducer","newText","FOLLOW","UNFOLLOW","SET_USERS","users","totalUsersCount","isFetching","portionSize","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","filter","login","setUserData","payload","getAuthUserData","authReducer","initialized","appReducer","require","createStore","combineReducers","applyMiddleware","compose","store","profilePage","dialogsPage","usersPage","form","formReducer","app","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunk","Navbar","className","NavCss","nav","item","activeClassName","active","Music","MusicCss","music","News","NewsCss","news","Pagination","totalItemsCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","pagination","buttonStyle","onClick","p","selectedPage","span","e","Users","key","user","subscription","src","photos","small","userPhoto","disabled","some","unfollow","follow","personalData","leftData","rightData","country","city","Preloader","style","margin","preloader","getUsersSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersApiComponent","pageNumber","length","UsersContainer","bind","items","totalCount","StatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","value","onBlur","onChange","currentTarget","PersonalData","PersonalDataCss","person_data","account_img","large","description","fullname","fullName","Post","PostCss","imgPost","textPost","NewPost","newPostElement","createRef","NewPostCss","newPost","heading","ref","placeholder","text","current","updateNewPostText","addPost","NewPostContainer","posts","onChangePostActionCreator","Posts","log","PostsCss","myPosts","PostsContainer","Profile","ProfileCss","content","ProfileContainer","params","authorizedUserId","getUserProfile","withRouter","Header","HeaderCss","header","loginBlock","logout","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","position","Field","component","Input","validate","required","formSummaryError","messageError","messages","stopSubmit","_error","values","DialogsContainer","lazy","App","initializeApp","path","render","fallback","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","Textarea","input","meta","touched","hasError","formControl"],"mappings":"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","file":"static/js/main.1c9331a1.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: \"Vlad\" },\r\n        { id: 2, name: \"Dima\" },\r\n        { id: 3, name: \"Roma\" },\r\n        { id: 4, name: \"Ivan\" },\r\n        { id: 5, name: \"Denis\" },\r\n    ],\r\n\r\n    messageData: [\r\n        { id: 1, message: \"Hi, what's your name?\" },\r\n        { id: 2, message: \"My name is Vlad.\" },\r\n        { id: 3, message: \"Ok.\" }\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, { id: 4, message: action.newBodyMessage }],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newBodyMessage) => ({type: SEND_MESSAGE, newBodyMessage})\r\n\r\nexport default dialogsReducer","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2xkCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__O3wO7\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.78e826ca.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2bWtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1O9l1\",\"item\":\"Navbar_item__IxBxH\",\"active\":\"Navbar_active__zXELE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__3qilN\",\"error\":\"formsControls_error__1txCf\",\"span\":\"formsControls_span__3BN84\",\"input\":\"formsControls_input__niX_8\",\"formSummaryError\":\"formsControls_formSummaryError__3k_eX\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Axios from \"axios\"\r\n\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"c9877fd6-556f-4313-b3ce-92da701afa2d\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    postFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    deleteFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","import { profileAPI, usersAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: \"Hi, how are you?\" },\r\n        { id: 1, message: \"It's my first post\" },\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: 3, message: state.newPostText }],\r\n                newPostText: ''\r\n            }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const onChangePostActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        if(!userId){\r\n            dispatch(setUserProfile({photos: {large: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png\"}}))\r\n        }\r\n        else{\r\n            usersAPI.getProfile(userId).then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n        } \r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) =>{\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer","import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOW = 'users_reducer/follow'\r\nconst UNFOLLOW = 'users_reducer/unfollow'\r\nconst SET_USERS = 'users_reducer/set_users'\r\nconst SET_CURRENT_PAGE = 'users_reducer/set_current_page'\r\nconst SET_TOTAL_USERS_COUNT = 'users_reducer/setTotalUsersCount'\r\nconst TOGGE_IS_FETCHING = 'users_reducer/tooggleIsFetching'\r\nconst TOGGE_FOLLOWING_IN_PROGRESS = 'users_reducer/toggle-following-in-progress'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    portionSize: 20,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId)\r\n                        return { ...u, followed: true }\r\n                    else\r\n                        return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId)\r\n                        return { ...u, followed: false }\r\n                    else\r\n                        return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGE_FOLLOWING_IN_PROGRESS, isFetching, userId })\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    \r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let response = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.postFollow.bind(usersAPI), followSuccess)\r\n    \r\n    // dispatch(toggleFollowingProgress(true, userId))\r\n    // let response = await usersAPI.postFollow(userId)\r\n    \r\n    // if (response.resultCode === 0) {\r\n    //     dispatch(followSuccess(userId))\r\n    // }\r\n    // dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.deleteFollow.bind(usersAPI), unfollowSuccess)\r\n\r\n    // dispatch(toggleFollowingProgress(true, userId))\r\n    // let response = await usersAPI.deleteFollow(userId)\r\n\r\n    // if (response.resultCode === 0) {\r\n    //     dispatch(unfollowSuccess(userId))\r\n    // }\r\n    // dispatch(toggleFollowingProgress(false, userId))\r\n\r\n}\r\n\r\nexport default usersReducer ","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI } from \"../api/api\"\r\n\r\nconst SET_USER_DATA = 'auth/set-user-data'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setUserData(response.data.data.id, response.data.data.email, response.data.data.login, true))\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0)\r\n            dispatch(getAuthUserData())\r\n        else {\r\n            let messageError = response.data.messages.length ? response.data.messages[0] : \"Sending error\"\r\n            dispatch(stopSubmit('login', { _error: messageError }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0)\r\n            dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer ","import { getAuthUserData } from \"./auth-reducer\"\r\n\r\n\r\nconst INITIALIZED_SUCCES = 'initialized-succes'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCES:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSucces = () => ({ type: INITIALIZED_SUCCES })\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then(() => {\r\n        dispatch(initializedSucces())\r\n    })\r\n}\r\n\r\nexport default appReducer ","import profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\r\nimport NavCss from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={NavCss.nav}>\r\n            <div className={NavCss.item}><NavLink to=\"/profile\" activeClassName={NavCss.active}>Profile</NavLink></div>\r\n            <div className={NavCss.item}><NavLink to=\"/dialogs\" activeClassName={NavCss.active}>Messages</NavLink></div>\r\n            <div className={NavCss.item}><NavLink to=\"/users\" activeClassName={NavCss.active}>Users</NavLink></div>\r\n            <div className={NavCss.item}><NavLink to=\"/news\" activeClassName={NavCss.active}>News</NavLink></div>\r\n            <div className={NavCss.item}><NavLink to=\"/music\" activeClassName={NavCss.active}>Music</NavLink></div>\r\n            <div className={NavCss.item}><a>Settings</a></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport MusicCss from \"./Music.module.css\"\r\n\r\nconst Music = (props) =>{\r\n    return(\r\n        <div className={MusicCss.music}>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport NewsCss from \"./News.module.css\"\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div className={NewsCss.news}>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React, { useState } from 'react'\r\nimport styles from './Pagination.module.css'\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = pagesCount/portionSize\r\n    let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage/portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.pagination}>\r\n            <div>\r\n            {portionNumber > 1 && <button className={styles.buttonStyle} onClick={() => setPortionNumber(portionNumber = 1)}>PREV</button>}\r\n            {\r\n                pages.filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => <span className={currentPage === p ? styles.selectedPage : '' + styles.span} onClick={(e) => { onPageChanged(p) }}>{p}</span>)\r\n            }\r\n            {portionNumber < portionCount && <button  className={styles.buttonStyle} onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React from 'react'\r\nimport styles from './users.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Pagination from '../common/Pagination/Pagination'\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, portionSize, ...props}) => {\r\n    return <div>\r\n\r\n        <Pagination currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} portionSize={portionSize}/>\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id} className={styles.user}>\r\n                <div className={styles.subscription}>\r\n                    <NavLink to={'profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : \"https://s1.iconbird.com/ico/2013/12/505/w450h4001385925286User.png\"} className={styles.userPhoto}></img>\r\n                    </NavLink>\r\n                    {u.followed \r\n                    ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {props.unfollow(u.id)}}>Unfollow</button> \r\n                    : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {props.follow(u.id)}}>Follow</button>}\r\n                </div>\r\n                <div className={styles.personalData}>\r\n                    <div className={styles.leftData}>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </div>\r\n                    <div className={styles.rightData}>\r\n                        <div>{(u.location != null ? u.location.country : \"Ukraine\") + ', ' + (u.location != null ? u.location.city : \"Kiev\")}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport preloader from \"../../../assets/images/preloader.gif\"\r\n\r\nconst Preloader = () => {\r\n    return <div style={{margin: 'auto'}}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector( getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.usersPage.portionSize\r\n}","import React from 'react'\r\nimport { follow, unfollow, setCurrentPage, getUsersThunkCreator } from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\"\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsersSelector, getPortionSize } from '../../redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersApiComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        if(this.props.users.length === 0)\r\n            this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n\r\n        // this.props.toggleIsFetching(true)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(response => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(response.items)})\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n                {this.props.isFetching ? <Preloader/> : <Users totalUsersCount={this.props.totalUsersCount} \r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      users={this.props.users}\r\n                      onPageChanged={this.onPageChanged}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      followingInProgress={this.props.followingInProgress}\r\n                      portionSize={this.props.portionSize}\r\n                />}\r\n               \r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: getPortionSize(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return{\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow, \r\n    unfollow, \r\n    //setUsers, \r\n    setCurrentPage, \r\n    //setTotalUsersCount, \r\n    //toggleIsFetching,\r\n    getUsers: getUsersThunkCreator\r\n})(UsersApiComponent);\r\n\r\nexport default UsersContainer","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    const activeEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (<>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activeEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input autoFocus={true} value={status} onBlur={deactiveEditMode} onChange={onStatusChange} ></input>\r\n            </div>\r\n        }\r\n    </>)\r\n}\r\n\r\n// class Status extends React.Component {\r\n\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps !== this.props) {\r\n//             this.setState({ status: this.props.status })\r\n//         }\r\n//     }\r\n\r\n//     activeEditMode = () => {\r\n//         this.setState({ editMode: true })\r\n//     }\r\n\r\n//     deactiveEditMode = () => {\r\n//         this.setState({ editMode: false })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n\r\n//     onStatusChange = (e) => {\r\n//         this.setState({ status: e.currentTarget.value })\r\n//     }\r\n\r\n//     render() {\r\n//         return <>\r\n//             {!this.state.editMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activeEditMode}>{this.props.status || \"----\"}</span>\r\n//                 </div>\r\n//             }\r\n//             {this.state.editMode &&\r\n//                 <div>\r\n//                     <input autoFocus={true} onBlur={this.deactiveEditMode} value={this.state.status} onChange={this.onStatusChange}></input>\r\n//                 </div>\r\n//             }\r\n//         </>\r\n//     }\r\n// }\r\n\r\nexport default StatusWithHooks;","import React from 'react';\r\n\r\nclass Status extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        debugger\r\n        if (prevProps !== this.props) {\r\n            this.setState({ status: this.props.status })\r\n        }\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({ editMode: true })\r\n    }\r\n\r\n    deactiveEditMode = () => {\r\n        this.setState({ editMode: false })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({ status: e.currentTarget.value })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeEditMode}>{this.props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={this.deactiveEditMode} value={this.state.status} onChange={this.onStatusChange}></input>\r\n                </div>\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport PersonalDataCss from \"./PersonalData.module.css\"\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Status from './Status';\r\nimport StatusWithHooks from './StatusWithHooks'\r\n\r\nconst PersonalData = (props) => {\r\n\r\n  if(!props.profile){\r\n    return <Preloader/>\r\n  }\r\n\r\n  /*src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1200px-Circle-icons-profile.svg.png\"*/\r\n  return (\r\n      <div className={PersonalDataCss.person_data}>\r\n        <img className={PersonalDataCss.account_img} src={props.profile.photos.large}/>\r\n        <div className={PersonalDataCss.description}>\r\n          <p className={PersonalDataCss.fullname}>{props.profile.fullName ? props.profile.fullName : 'Vlad Drachev'}</p>\r\n          <StatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n          <p>Date of birth: 28 July</p>\r\n          <p>Education: DSTU</p>\r\n          <p>City: Kiev</p>\r\n          <p>Country: Ukraine</p>\r\n        </div> \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PersonalData;","import React from 'react';\r\nimport PostCss from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={PostCss.post}>\r\n      <img className={PostCss.imgPost} src=\"https://s1.iconbird.com/ico/2014/1/588/w512h5121390727886addlist512.png\" />\r\n      <p className={PostCss.textPost}>{props.message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport NewPostCss from './NewPost.module.css';\r\n\r\nconst NewPost = (props) => {\r\n\r\n  let newPostElement = React.createRef()\r\n\r\n  let onaddPost = () => {\r\n    props.addPost()\r\n  }\r\n\r\n  let onChangePost = () => { \r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={NewPostCss.newPost}>\r\n      <h3 className={NewPostCss.heading}>New Post</h3>\r\n      <textarea ref={newPostElement} placeholder=\"Add text...\" value={props.newPostText} onChange={onChangePost}></textarea>\r\n      <button onClick={onaddPost}>ADD</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPost;","import React from 'react';\r\nimport { onChangePostActionCreator, addPostActionCreator } from '../../../../redux/profileReducer';\r\nimport NewPost from './NewPost';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      dispatch(onChangePostActionCreator(text))\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n\r\nexport default NewPostContainer;","import React from 'react';\r\nimport PostsCss from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport NewPostContainer from './NewPost/NewPostContainer';\r\n\r\nconst Posts = (props) => {\r\n  console.log(\"render\")\r\n  console.log(props)\r\n  return (\r\n    <div>\r\n      <NewPostContainer/>\r\n      <div className={PostsCss.myPosts}>\r\n        <h2 className={PostsCss.heading}> My Posts</h2>\r\n         {props.posts.map( p => <Post key={p.id} message={p.message}></Post>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Posts from './Posts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n  }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps)(Posts)\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileCss from './Profile.module.css';\r\nimport PersonalData from './PersonalData/PersonalData';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={ProfileCss.content}>\r\n      <PersonalData profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <PostsContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profileReducer'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport HeaderCss from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={HeaderCss.header}>\r\n            <img src='https://static.rfstat.com/renderforest/images/v2/logo-homepage/flat_3.png' />\r\n            <p>Web Messenger</p>\r\n            <div className={HeaderCss.loginBlock}>\r\n                {props.isAuth ? (<><NavLink to='profile'>{props.login}</NavLink> - <button onClick={props.logout}>Logout</button></>): <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer)","import React, { useEffect } from 'react'\r\n\r\n// class ActionLink extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { value: ['mango'] };\r\n\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     if(this.state.value.some(el => (el === event.target.value) )){\r\n//       let e = event.target.value\r\n//       this.setState((state, props) => {\r\n//         debugger\r\n//         return {value: state.value.filter(el => el !== e)}\r\n//       })\r\n//       //this.setState({value: [...this.state.value].filter(el => el !== event.target.value)})\r\n//     }\r\n//     else{\r\n//       let e = event.target.value\r\n//       this.setState((state, props) => ({value: [...state.value, e]}))\r\n//       //this.setState({value: [...this.state.value, event.target.value]})\r\n//     }\r\n//   }\r\n\r\n//   handleSubmit(event) {\r\n//     alert('Ваш любимый вкус: ' + this.state.value);\r\n//     event.preventDefault();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit}>\r\n//         <label>\r\n//           Выберите ваш любимый вкус:\r\n//           <select multiple={true} value={this.state.value} onChange={this.handleChange}>\r\n//             <option value=\"grapefruit\">Грейпфрут</option>\r\n//             <option value=\"lime\">Лайм</option>\r\n//             <option value=\"coconut\">Кокос</option>\r\n//             <option value=\"mango\">Манго</option>\r\n//           </select>\r\n//         </label>\r\n//         <input type=\"submit\" value=\"Отправить\" />\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nclass ActionLink extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isGoing: true,\r\n      numberOfGuests: 2\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.name === 'isGoing' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <label>\r\n          Пойдут:\r\n          <input\r\n            name=\"isGoing\"\r\n            type=\"checkbox\"\r\n            checked={this.state.isGoing}\r\n            onChange={this.handleInputChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Количество гостей:\r\n          <input\r\n            name=\"numberOfGuests\"\r\n            type=\"number\"\r\n            value={this.state.numberOfGuests}\r\n            onChange={this.handleInputChange} />\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActionLink","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { Input } from '../common/FormsControls/FormsControls'\r\nimport style from '../common/FormsControls/formsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div style={{position: \"relative\"}}><Field name=\"email\" placeholder=\"Email\" type=\"text\" component={Input} validate={required}></Field></div>\r\n            <div style={{position: \"relative\"}}><Field name=\"password\" placeholder=\"Password\" type=\"password\" component={Input} validate={required}></Field></div>\r\n            <div style={{position: \"relative\"}}><Field name=\"rememberMe\" component=\"input\" type=\"checkbox\"></Field>Remember me</div>\r\n            { error && <div className={style.formSummaryError}>{error} </div>}\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    ) \r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst Login = (props) => {\r\n\r\n    const submit = values =>{\r\n        props.login(values.email, values.password, values.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={submit}/>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React, { Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter, withRouter } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ActionLink from './components/Test';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withSuspense } from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends React.Component {\n  \n  componentDidMount(){\n    this.props.initializeApp()\n  }\n\n  render() {\n    if(!this.props.initialized)\n      return <Preloader/>\n\n    return (\n      <BrowserRouter>\n        <div className=\"wrapper\">\n          <HeaderContainer />\n          <Navbar />\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)\n          }\n          />\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  connect(mapStateToProps, {initializeApp}))\n  (App);\n","import React, { Suspense } from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<div>Загрузка...</div>}>\r\n                <Component {...props}></Component>\r\n            </Suspense>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"users_user__vvPmV\",\"userPhoto\":\"users_userPhoto__hrrqP\",\"personalData\":\"users_personalData__36akm\",\"leftData\":\"users_leftData__2iC3w\",\"rightData\":\"users_rightData__3t2ra\",\"subscription\":\"users_subscription__2I2G8\",\"pagination\":\"users_pagination__2QQY2\",\"selectedPage\":\"users_selectedPage__RvCCt\",\"span\":\"users_span__1MUVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__pJWyv\",\"selectedPage\":\"Pagination_selectedPage__Y97C3\",\"span\":\"Pagination_span__2fExk\",\"buttonStyle\":\"Pagination_buttonStyle__3Zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person_data\":\"PersonalData_person_data__L4LI9\",\"account_img\":\"PersonalData_account_img__3xPIc\",\"description\":\"PersonalData_description__3ZiYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post___oCPn\",\"imgPost\":\"Post_imgPost__2FxGL\",\"textPost\":\"Post_textPost__Jyw5S\"};","export const required = value => {\r\n    if(value) return undefined\r\n    else return \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} ymbols`;\r\n    else return undefined\r\n}","import React from 'react'\r\nimport styles from './formsControls.module.css'\r\n\r\n\r\nexport const Textarea = ({input, placeholder, meta:{touched, error}}) => {\r\n    const hasError = touched && error\r\n    return( <>\r\n            <textarea className={styles.formControl + ' ' + (hasError ? styles.error : '')} {...input} placeholder={placeholder}></textarea>\r\n            {touched && (error && <span className={styles.span}>{error}</span>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, type, placeholder, meta:{touched, error}}) => {\r\n    const hasError = touched && error\r\n    return( <>\r\n            <input className={styles.formControl + ' ' + (hasError ? styles.error : '')} {...input} type={type} placeholder={placeholder}/>\r\n            {touched && (error && <span className={styles.input}>{error}</span>)}\r\n        </>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"Posts_myPosts__3gzxD\",\"heading\":\"Posts_heading__2gwCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__2q4l8\",\"heading\":\"NewPost_heading__3PIG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2X8YF\",\"loginBlock\":\"Header_loginBlock__3GyNx\"};"],"sourceRoot":""}